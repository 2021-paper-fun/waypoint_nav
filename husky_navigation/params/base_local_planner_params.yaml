TrajectoryPlannerROS:
  max_vel_x: 0.5
  min_vel_x: 0.1 # We do not want the robot to backup unless there is a rear facing lidar checking for obstacles
  min_vel_x: 0.1
  max_vel_theta: 1.0
  min_vel_theta: -1.0
  min_in_place_vel_theta: 0.4

  acc_lim_theta: 3.0
  acc_lim_x: 2.0
  acc_lim_y: 0.0

  holonomic_robot: false

  escape_vel: -0.1

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 0.1  # in rads
  xy_goal_tolerance: 0.2  # in meters
  yaw_goal_tolerance: 0.1
  xy_goal_tolerance: 0.2
  latch_xy_goal_tolerance: false

  # Forward Simulation Parameters
    # these parameters change how the planner simulates trajectories at each update and therefore changes the optimal trajectory that is chosen
    # These should be adjusted based on your computer performance
  sim_time: 2.0   # setting time of each simulation that it must evaluate. Higher will create longer curves but too low can limit performance (<2)
  sim_granularity: 0.02 # the step size to take between points on a trajectory, or how frequent should the points on this trajectory should be examined
  sim_time: 2.0
  sim_granularity: 0.02
  angular_sim_granularity: 0.02
  vx_samples: 6  # how many samples of x velocity are taken for simulated trajectories
  vtheta_samples: 20 # how many samples of theta velocity are taken for simulated trajectories
  controller_frequency: 20.0  # how often the planning algorithm is performed (hz)
  vx_samples: 6
  vtheta_samples: 20
  controller_frequency: 20.0

  # Trajectory scoring parameters
  meter_scoring: true # Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and path_distance are expressed in units of meters or cells. Cells are assumed by default (false).
